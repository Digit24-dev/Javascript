 <<< 리액트와 데이터 >>>


 여러 개의 컴포넌트를 선언, 리액트의 기본적인 내용만으로 컴포넌트끼리 커뮤니케이션 하는 방법을 살펴본다.
 Flux 패턴을 활용할 수 있게 해주는 라이브러리들을 사용, 코드가 간단해짐.

  - MobX 라이브러리

 여러 개의 컴포넌트 사용하기.
 지금까지는 App 컴포넌트만 선언하고 활용함. item 컴포넌트를 추가로 만들어 사용.
 
 - 10-2-1.html


 App 컴포넌트에서 Item 컴포넌트로 데이터를 전달할 때는 컴포넌트의 속성을 사용.

 - 10-2-2.html

 << 부모에서 자식의 state 속성 변경하기 >>
 부모 컴포넌트에서 자식 컴포넌트로 어떤 데이터를 전달할 때는 속성(this, props)을 사용.
 부모에서 자식으로 어떤 데이터를 전달한 뒤 화면 내용을 변경할 때도 속성(this.props)를 사용.

 부모 컴포넌트에서 시간을 구하고, 이를 속성을 통해 자식 컴포넌트에게 전달하는 예시
  *componentDidUpdate() 메소드가 중요.

 - 10-2-3.html 
 
 componentDidUpdate() 메소드는 컴포넌트에 변경이 발생할 때 호출되는 메소드.
 이를 오버라이드 해서 사용하고 있는 것. componentDidUpdate()메소드는 매개변수로 변경 이전의 속성(prevProps)이 들어온다.
 이 속성 값과 현재 속성 값을 비교해서 변경이 있는경우(다른 경우)에만 setState() 메소드를 호출해서 화면에 변경 사항을 출력한다.
 componentDidUpdate() 메소드 부분이 없으면 시간은 변하지 않는다.

 componentDidUpdate() 메소드가 없어도 render() 메소드는 변경사항이 있을 때 실행되므로 시간이 변경되어야 한다고 생각하는 독자도 있을 수 있다.
 그런데 render() 메소드는 단순하게 컴포넌트를 조합해서 문서 객체를 만든 뒤 화면에 출력하는 메소드가 아니다.
 내부적으로 쓸데없는 변경 등을 막아 애플리케이션의 성능을 높일 수 있게 다양한 처리를 해줌.

 

 << 자식에서 부모의 state 속성 변경 >>

 자식 컴포넌트에서 부모 컴포넌트의 속성을 변경할 때는 메소드를 사용한다.
 부모 컴포넌트에서 자신(부모)의 속성을 변경하는 메소드를 자식에게 전달한 뒤, 자식에서 이를 호출하게 만드는 것.

 - 10-2-4.html

 자바스크립트 리액트 복습.
 