
8-1 구문 오류와 예외

 구문 오류 : 코드가 실행조차 되지 않음.
 런타임 오류 / 예외


 - SyntaxError 라고 출력되는 오류 이외의 모든 오류(TypeError, ReferenceError, RangeError)는 예외.

 <try catch finally>

 <--- 예외처리 구문 내부에서 return 사용 --->

 function test(){
    try{
        alert('A위치')
        throw "예외 강제 발생"  <--- throw 키워드로 예외를 강제로 발생시킴.
    }
    catch(exception){
        alert('B위치')
        return
    }

    alert('C위치')
 }

        <==출력==>
        A위치
        B위치

 <--- 예외처리 구문 내부에서 return 사용2 --->

 function test(){
    try{
        alert('A위치')
        throw "예외 강제 발생"
    }catch(exception){
        alert('B위치')
        return
    }finally{
        alert('C위치')
    }
 }

        <==출력==>
        A위치
        B위치
        C위치


<<< 예외 처리 고급 >>>


 << 예외 객체 >>
 예외 정보를 확인할 수 있게 해줌.

 [예외 객체의 속성]
 속성이름   |   설명
 name      |   예외 이름
 message   |   예외 메시지

 <--- 예외 정보 출력 --->

 try{
    const array = new Array(9999999999999999999999999999999)
 }catch(exception){
    console.log(exception)
    console.log()
    console.log(exception.name)
    console.log(exception.message)
 }

        <==출력==>
        RangeError : Invalid array Length at 8-2-1.html: 7
        RangeError
        Invalid array Length


 << 예외 강제 발생 >>

 throw 키워드 사용

 ========================

 throw 문자열

 throw new Error(문자열)
  -> 줄번호까지 참조할 수 있게 된다.


  <--- 예외 강제로 발생시키고 잡기 --->

  function divide(a, b){
    if(b === 0){
        throw "0으로 나눌 수 없습니다."
    }
    return a / b
  }
  console.log(divide(10, 2))
  console.log(divide(10, 0))

    <==출력==>
    5
    Uncaught 0으로는 나눌 수 없습니다.

 예외를 강제로 발생시키기

 function test(object){
    console.log(object.a + object.b)
 }

 test({})

    <==출력==>
    NaN

 일반적인 프로그래밍일 경우
 - object 객체에 a속성과 b속성이 없으므로 예외를 발생.
 - 존재하지 않는 것을 더하므로 +연산 시에도 예외를 발생.

 자바스크립트의 경우
 - object.a와 object.b가 undefined로 출력.
 - undefined + undefined = NaN 출력.

 예외를 많이 발생시키지 않기 때문에 함수를 잘 사용해야함.

 <--- 강제 예외 발생 하여 사용 유도 --->

 function test(object){
    if(object.a !== undefined && object.b !== undefined){
        console.log(object.a + object.b)
    }else{
        throw new Error("a 속성과 b 속성을 지정하지 않았습니다.")
    }
 }

test({})
